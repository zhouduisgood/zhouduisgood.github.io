<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>13-Shiro的rememberMe</title>
      <link href="/2021/09/14/13-Shiro%E7%9A%84rememberMe/"/>
      <url>/2021/09/14/13-Shiro%E7%9A%84rememberMe/</url>
      
        <content type="html"><![CDATA[<h4 id="权限分类"><a href="#权限分类" class="headerlink" title="权限分类"></a>权限分类</h4><table><thead><tr><th>用户访问页面分为3中级别</th><th></th></tr></thead><tbody><tr><td>未认证可以访问的页面</td><td>比如登录、注册页面</td></tr><tr><td>“记住我”（曾登录过）访问的页面</td><td>index.html</td></tr><tr><td>以认证可访问的页面</td><td>转账页面等</td></tr></tbody></table><h5 id="记住密码的流程"><a href="#记住密码的流程" class="headerlink" title="记住密码的流程"></a>记住密码的流程</h5><p>​    第一次登录login.html页面时，点击“登录”会把用户的username和password存入cookie中，第二次登录login.html页面时输入username后，会调用js方法获取cookie里的密码并自动把密码填写到input标签里。</p><h5 id="shiro的“记住我”流程"><a href="#shiro的“记住我”流程" class="headerlink" title="shiro的“记住我”流程"></a>shiro的“记住我”流程</h5><p>​    现在上述功能交给shiro的SecurityManager实现，只需要告诉shiro把UsernamePasswordToekn类型token传入SecurityManager中，就会自动检测。</p><h5 id="流程示意图"><a href="#流程示意图" class="headerlink" title="流程示意图"></a>流程示意图</h5><p>​    <img src="https://z3.ax1x.com/2021/09/14/4FzFV1.png" alt="avatar"></p><h4 id="rememberMe实现"><a href="#rememberMe实现" class="headerlink" title="rememberMe实现"></a>rememberMe实现</h4><p>​    在ShiroConfig中设置过滤器的权限，让访问index.html页面是以登录或曾登录用户的才能访问。设置过滤filterMap规则。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filterMap.put(<span class="string">&quot;/index.html&quot;</span>,<span class="string">&quot;user&quot;</span>);</span><br></pre></td></tr></table></figure><p>​    并且设置cookie管理器，设置cookie的名字和存在时间。并且把rememberMe管理器传送给shiro的SecurityManager</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> CookieRememberMeManager <span class="title">getCookieRememberMeManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       CookieRememberMeManager rememberMeManager = <span class="keyword">new</span> CookieRememberMeManager();</span><br><span class="line">       SimpleCookie simpleCookie = <span class="keyword">new</span> SimpleCookie(<span class="string">&quot;rememberMe&quot;</span>);</span><br><span class="line">       simpleCookie.setMaxAge(<span class="number">5</span>*<span class="number">60</span>);</span><br><span class="line">       rememberMeManager.setCookie(simpleCookie);</span><br><span class="line">       <span class="keyword">return</span> rememberMeManager;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(MyRealm myRealm, EhCacheManager ehCacheManager)</span> </span>&#123;</span><br><span class="line">       DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">       defaultWebSecurityManager.setRealm(myRealm);</span><br><span class="line">       defaultWebSecurityManager.setCacheManager(ehCacheManager);</span><br><span class="line">       defaultWebSecurityManager.setRememberMeManager(getCookieRememberMeManager());</span><br><span class="line">       <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>​    并设置当subject.login(token)时，不仅要传username和password还要穿rememberMe</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkLogin</span><span class="params">(String username, String pwd, <span class="keyword">boolean</span> rememberMe)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(username, pwd);</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        token.setRememberMe(rememberMe);</span><br><span class="line">        subject.login(token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检测</p><p>​    login.html页面，填写好了username和password后点击“记住我”，进入index.html后，关闭所有页面，重新打开浏览器登录localhost:8080/index.html。</p><p><img src="https://z3.ax1x.com/2021/09/14/4EA0oD.png" alt="avatar"></p><p><img src="https://z3.ax1x.com/2021/09/14/4EAoWj.png" alt="avatar"></p>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12-Shiro的缓存管理</title>
      <link href="/2021/09/12/12-Shiro%E7%9A%84%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86/"/>
      <url>/2021/09/12/12-Shiro%E7%9A%84%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h4 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h4><p>​    现在再添加量Shiro标签后，以HTML形式进行权限管理。是否每一次点击页面的某个菜单，都要经过MyRealm的授权方法，从数据库里查数据。在MyRealm的doGetAuthorizationInfo打印一行sout（“———-查询用户权限—-”）；看看登录成功后，引入index.html这句话打印了几次。现在用户zhoudu登录。</p><h5 id="检测结果"><a href="#检测结果" class="headerlink" title="检测结果"></a>检测结果</h5><p><img src="https://z3.ax1x.com/2021/09/12/4phdbt.png" alt="avatar"></p><p><img src="https://z3.ax1x.com/2021/09/12/4p4CxH.png" alt="avatar"></p><p><img src="https://z3.ax1x.com/2021/09/12/4pIFEt.png" alt="avatar"></p><p><img src="https://z3.ax1x.com/2021/09/12/4pI35V.png" alt="avatar"></p><p>​    由上图所示，在初始index.html时一共16个shiro标签，所以执行了16次授权方法。并且每次点击一个菜单又会调用授权方法。如点击“客户查询”，虽然没有用shiro标签修饰但是加上了权限判断的注解，也会打印”———-查询用户权限—-===”)。如下图。</p><p><img src="https://z3.ax1x.com/2021/09/12/4pTemj.png" alt="avatar"></p><p>​    说明无论是初始化，还是点击某个菜单都会查询数据库的数据，而且这些查询是同样的重复的操作，当用户很多时用户点击量很大时会频繁的访问数据库，非常消耗数据库的性能，所以在初始化界面时把数据从数据库里读出来存入缓存中，下次点击某个菜单直接从缓存里寻找，这样性能提高很多。</p><h4 id="使用缓存"><a href="#使用缓存" class="headerlink" title="使用缓存"></a>使用缓存</h4><h5 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h5><p>​    首页springboot要支持缓存，在引入第三方缓存，然后shiro支持缓存</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="设置缓存策略"><a href="#设置缓存策略" class="headerlink" title="设置缓存策略"></a>设置缓存策略</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">updateCheck</span>=<span class="string">&quot;false&quot;</span> <span class="attr">dynamicConfig</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--持久化磁盘路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">&quot;java.io.tmpdir&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">&quot;users&quot;</span> <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;300&quot;</span> <span class="attr">maxEntriesLocalHeap</span>=<span class="string">&quot;1000&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span>    <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;3600&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">overflowToDisk</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">maxElementsOnDisk</span>=<span class="string">&quot;10000&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">diskPersistent</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="配置ShiroConfig"><a href="#配置ShiroConfig" class="headerlink" title="配置ShiroConfig"></a>配置ShiroConfig</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EhCacheManager <span class="title">getEhCacheManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        EhCacheManager ehCacheManager = <span class="keyword">new</span> EhCacheManager();</span><br><span class="line">        ehCacheManager.setCacheManagerConfigFile(<span class="string">&quot;classpath:ehcache.xml&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ehCacheManager;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(MyRealm myRealm, EhCacheManager ehCacheManager)</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        defaultWebSecurityManager.setRealm(myRealm);</span><br><span class="line">        defaultWebSecurityManager.setCacheManager(ehCacheManager);</span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11-Shiro的授权管理</title>
      <link href="/2021/09/11/11-Shiro%E7%9A%84%E6%8E%88%E6%9D%83%E7%AE%A1%E7%90%86/"/>
      <url>/2021/09/11/11-Shiro%E7%9A%84%E6%8E%88%E6%9D%83%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h4 id="权限管理的方式"><a href="#权限管理的方式" class="headerlink" title="权限管理的方式"></a>权限管理的方式</h4><h5 id="HTML页面限制"><a href="#HTML页面限制" class="headerlink" title="HTML页面限制"></a>HTML页面限制</h5><p>​    方式有两种，第一种是基于HTML页面展示的形式。在登录时查询到用户权限结合shiro标签库展示，展示出该用户所有的权限菜单。此方法有缺点，比如wangtaiwen用户是HR职务只有修改、查询客户这两个权限，在登录页面只能看到这两个菜单，但是ta无意间知道了“入库”权限的url，只要wangtaiwen是登录状态可以不用点击菜单直接输入url—&gt;”localhost:8080/repoAdd.html”，就能越级访问。所以要在ShiroConfig中加入限制条件。只有改用户有sys:repo:save时才能访问“入库”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filterMap.put(<span class="string">&quot;/repoAdd.html&quot;</span>,<span class="string">&quot;perms[sys:repo:save]&quot;</span>);</span><br></pre></td></tr></table></figure><h5 id="注解限制"><a href="#注解限制" class="headerlink" title="注解限制"></a>注解限制</h5><p>​    此方式不依赖shiro标签，在进入index.html页面后不管用户身份是什么，展示全部的菜单。但是用户只能点击ta有权限的那些菜单，其它菜单看得见但是点不进去。这需要在每个菜单的a标签的href=url对应的controller方法上加上注解，说明此方式是具有某个权限才能访问。比如”查询客户“菜单没有用户都可以看到，不用加《shiro:hasPermission name=”sys:customer:find”》标签。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;dd&gt;&lt;a href=<span class="string">&quot;customer/customerfind&quot;</span> target=<span class="string">&quot;myFrame&quot;</span>&gt; 查询客户&lt;/a&gt;&lt;/dd&gt;</span><br></pre></td></tr></table></figure><p>在CustomerController中加上注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;customer&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;customerfind&quot;)</span></span><br><span class="line">    <span class="meta">@RequiresPermissions(&quot;sys:customer:find&quot;)</span> <span class="comment">// 当此用户有sys:customer:find是才能有客户查询权限</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">cFind</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;customerFind&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="未授权处理"><a href="#未授权处理" class="headerlink" title="未授权处理"></a>未授权处理</h4><p>​    使用注解方式授权时，用户可以看到某个菜单，单点击就报错443。是因为缺少某个权限。比如用户yangtian是库管，ta有库存的增删改查权限。没有“查询客户”权限，此时点击就报错，就可以弹出页面提示用户，缺少权限lackpermission.html弹出。需要在ShiroConfig中设置未授权url链接。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter.setUnauthorizedUrl(<span class="string">&quot;/lackpermission.html&quot;</span>);</span><br></pre></td></tr></table></figure><p>​    还在PageController中处理次请求，跳转到lackpermision.html页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/lackpermission.html&quot;)</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">lackpermission</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;lackpermission&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>​    弹出页面lackpermission.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    缺少权限</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10-Shiro的密码加密加盐</title>
      <link href="/2021/09/11/10-Shiro%E7%9A%84%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86%E5%8A%A0%E7%9B%90/"/>
      <url>/2021/09/11/10-Shiro%E7%9A%84%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86%E5%8A%A0%E7%9B%90/</url>
      
        <content type="html"><![CDATA[<h4 id="密码加密"><a href="#密码加密" class="headerlink" title="密码加密"></a>密码加密</h4><p>​    一般加密的方式有2种，一种是base64加密是可以双向破解的。另一种的md5码加密只能由明文转成密文，不能有密文转成明文。这种单向转换更加安全，即使黑客进入数据库了无法根据密文密码登录。特别注意在注册时密码加密规则是什么就在shiro认证是告诉MyRealm密码匹配规则。myRealm最终匹配的是密文（先把input的密码转换成密文再和数据库的密文比对）代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在ShiroConfig类中</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> HashedCredentialsMatcher <span class="title">getHashedCredentialsMatcher</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 设置密码匹配规则</span></span><br><span class="line">       HashedCredentialsMatcher matcher = <span class="keyword">new</span> HashedCredentialsMatcher();</span><br><span class="line">       matcher.setHashAlgorithmName(<span class="string">&quot;md5&quot;</span>);</span><br><span class="line">       matcher.setHashIterations(<span class="number">1</span>);</span><br><span class="line">       <span class="keyword">return</span> matcher;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> MyRealm <span class="title">getMyRealm</span><span class="params">(HashedCredentialsMatcher matcher)</span> </span>&#123;</span><br><span class="line">       MyRealm myRealm = <span class="keyword">new</span> MyRealm();</span><br><span class="line">       myRealm.setCredentialsMatcher(matcher);</span><br><span class="line">       <span class="keyword">return</span> myRealm;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="加密测试"><a href="#加密测试" class="headerlink" title="加密测试"></a>加密测试</h4><p>​    现在数据库数据里username=zhoudu存的是123456的32位md5码，现在登录访问localhost：8080/输入username=zhoudu,password=123456。流程如下图。</p><table><thead><tr><th><img src="https://z3.ax1x.com/2021/09/11/hx0mu9.png" alt="avatar"></th></tr></thead><tbody><tr><td><img src="https://z3.ax1x.com/2021/09/11/hxBnxg.png" alt="avatar"></td></tr><tr><td></td></tr><tr><td></td></tr></tbody></table><h4 id="密码加盐"><a href="#密码加盐" class="headerlink" title="密码加盐"></a>密码加盐</h4><h5 id="注册时加密加盐规则"><a href="#注册时加密加盐规则" class="headerlink" title="注册时加密加盐规则"></a>注册时加密加盐规则</h5><p>​    加盐是让密码更安全的手段，可以生成随机数加密码前面后面等等。关键是在注册时规定密码加密规则和加盐规则。加盐加密后密码需要存入数据库。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"><span class="meta">@RequestMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">register</span><span class="params">(String username, String pwd)</span> </span>&#123;</span><br><span class="line">        Md5Hash md5 = <span class="keyword">new</span> Md5Hash(pwd);</span><br><span class="line">        System.out.println(<span class="string">&quot;单纯加密后 md5---》&quot;</span>+md5);</span><br><span class="line">        <span class="keyword">int</span> num = <span class="keyword">new</span> Random().nextInt(<span class="number">100</span>)+<span class="number">100</span>;</span><br><span class="line">        String salt = num+<span class="string">&quot;&quot;</span>;</span><br><span class="line">        Md5Hash md5_salt = <span class="keyword">new</span> Md5Hash(pwd,salt);</span><br><span class="line">        System.out.println(<span class="string">&quot;md5_salt-----&gt;&quot;</span>+md5_salt); </span><br><span class="line">        <span class="comment">// 不能把单纯加密后 md5存入数据库，</span></span><br><span class="line">        <span class="comment">// 因为在MyRealm中的认证里写入加盐参数</span></span><br><span class="line">  <span class="comment">// AuthenticationInfo info = new SimpleAuthenticationInfo(username,users.getPwd(),ByteSource.Util.bytes(users.getPwdSalt(),getName());</span></span><br><span class="line">        <span class="comment">// 所以必须把密码加盐加密的md5码存入数据库，</span></span><br><span class="line">        userService.insertOneUser(username, md5_salt.toString(), salt);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还需要增加insert方法在service，dao，mapper里。并添加register.html</p><h5 id="注册页面register-html"><a href="#注册页面register-html" class="headerlink" title="注册页面register.html"></a>注册页面register.html</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/user/register&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">      &lt;p&gt;账号&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> /&gt;&lt;/p&gt;</span><br><span class="line">      &lt;p&gt;密码&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;pwd&quot;</span>/&gt;&lt;/p&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="UserService，UserDao，UserMapper-xml一套"><a href="#UserService，UserDao，UserMapper-xml一套" class="headerlink" title="UserService，UserDao，UserMapper.xml一套"></a>UserService，UserDao，UserMapper.xml一套</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">UserServiceImpl</span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertOneUser</span><span class="params">(String username, String pwd, String salt)</span> </span>&#123;</span><br><span class="line">        userDao.insertOneUser(username,pwd,salt);</span><br><span class="line">    &#125;</span><br><span class="line">    ------------------------------------</span><br><span class="line"> <span class="function">UserDao</span></span><br><span class="line"><span class="function"> <span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertOneUser</span><span class="params">(String username, String password, String salt)</span> </span>;</span><br><span class="line"> ------------------------------------</span><br><span class="line"> UserMapper.xml</span><br><span class="line"> &lt;insert id=<span class="string">&quot;insertOneUser&quot;</span> &gt;</span><br><span class="line">        <span class="function">insert into <span class="title">users</span> <span class="params">(username,password,password_salt)</span> <span class="title">values</span><span class="params">(#&#123;username&#125;, #&#123;password&#125;, #&#123;salt&#125;)</span></span>;</span><br><span class="line">    &lt;/insert&gt;</span><br></pre></td></tr></table></figure><h4 id="MyRealm认证规则"><a href="#MyRealm认证规则" class="headerlink" title="MyRealm认证规则"></a>MyRealm认证规则</h4><p>​    因为注册时对密码加密加盐看，所以MyRealm认证时要查询数据库的password_salt，并存入AuthenticationInfo对象里。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;</span><br><span class="line">        String username = token.getUsername();</span><br><span class="line">        Users users = userDao.queryUserByUsername(username);</span><br><span class="line">        <span class="comment">// 用户名，密码，salt,realm.</span></span><br><span class="line">        AuthenticationInfo info = <span class="keyword">new</span> SimpleAuthenticationInfo(</span><br><span class="line">                username,users.getPwd(),</span><br><span class="line">                ByteSource.Util.bytes(users.getPwdSalt()),</span><br><span class="line">                getName());</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="加盐测试"><a href="#加盐测试" class="headerlink" title="加盐测试"></a>加盐测试</h4><p>​    先注册新账号、密码。laowang13 ，112233。注册成功后登陆</p><table><thead><tr><th><img src="https://z3.ax1x.com/2021/09/11/hx5F5F.png" alt="avatar"></th></tr></thead><tbody><tr><td><img src="https://z3.ax1x.com/2021/09/11/hx5V29.png" alt="avatar"></td></tr><tr><td><img src="https://z3.ax1x.com/2021/09/11/hx5tKI.png" alt="avatar"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9-引入layui实现Shiro后台管理页面</title>
      <link href="/2021/09/10/9-%E5%BC%95%E5%85%A5layui%E5%AE%9E%E7%8E%B0Shiro%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2/"/>
      <url>/2021/09/10/9-%E5%BC%95%E5%85%A5layui%E5%AE%9E%E7%8E%B0Shiro%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h4 id="引入layui"><a href="#引入layui" class="headerlink" title="引入layui"></a>引入layui</h4><p>​    因为自己写的index.html页面简单难看，就要引入现成的框架Layui，可以去官网下载也可以引入SDN。把下载好的layui文件放入static中。</p><table><thead><tr><th>引入方式</th></tr></thead><tbody><tr><td>本地引入</td></tr><tr><td>在head标签里 添加《link rel=”stylesheet” href=”layui/css/layui.css》</td></tr><tr><td>在底部 body的上方添加《script src=”layui/layui.js”&gt;&lt;/script》</td></tr><tr><td>SDN引入</td></tr><tr><td>在head标签里 添加《link rel=”stylesheet” href=”//unpkg.com/<a href="mailto:&#x6c;&#x61;&#x79;&#x75;&#105;&#64;&#50;&#x2e;&#x36;&#46;&#x38;">&#x6c;&#x61;&#x79;&#x75;&#105;&#64;&#50;&#x2e;&#x36;&#46;&#x38;</a>/dist/css/layui.css”》</td></tr><tr><td>在底部 body的上方添加《script src=”//unpkg.com/<a href="mailto:&#108;&#x61;&#x79;&#x75;&#x69;&#64;&#x32;&#x2e;&#x36;&#46;&#x38;">&#108;&#x61;&#x79;&#x75;&#x69;&#64;&#x32;&#x2e;&#x36;&#46;&#x38;</a>/dist/layui.js”》</td></tr></tbody></table><h4 id="页面布局"><a href="#页面布局" class="headerlink" title="页面布局"></a>页面布局</h4><p>​    直接在官网上找到管理布局页面复制粘贴，原始模板页面如下</p><table><thead><tr><th>原始页面</th></tr></thead><tbody><tr><td><img src="https://z3.ax1x.com/2021/09/10/hXdd1A.png" alt="avatar"></td></tr><tr><td>需要修改左侧导航栏为权限列表</td></tr><tr><td><img src="https://z3.ax1x.com/2021/09/10/hXBPld.png" alt="avatar"></td></tr><tr><td>改变右上角的用户信息,只用用户登录了，才会显示用户名，若是游客状态就不显示用户名</td></tr><tr><td><img src="https://z3.ax1x.com/2021/09/10/hXrNQJ.png" alt="avatar"></td></tr></tbody></table><h4 id="index-html代码"><a href="#index-html代码" class="headerlink" title="index.html代码"></a>index.html代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:shiro</span>=<span class="string">&quot;http://pollix.at/themeleaf/shiro&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>shiro后台 - Layui<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;layui/css/layui.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入 layui.css --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;link rel=&quot;stylesheet&quot; href=&quot;//unpkg.com/layui@2.6.8/dist/css/layui.css&quot;&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-layout layui-layout-admin&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-logo layui-hide-xs layui-bg-black&quot;</span>&gt;</span>权限菜单<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 头部区域（可配合layui 已有的水平导航） --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav layui-layout-left&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>控制台<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>用户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>其它系统<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>邮件管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>消息管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>授权管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav layui-layout-right&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--登录状态--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:user</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item layui-hide layui-show-md-inline-block&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://z3.ax1x.com/2021/08/08/fQDPht.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-img&quot;</span>&gt;</span></span><br><span class="line">                        用户<span class="tag">&lt;<span class="name">shiro:principal</span>/&gt;</span>欢迎你,当前用户职位是</span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;admin&quot;</span>&gt;</span>超级管理员<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;HR&quot;</span>&gt;</span>人事<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;seller&quot;</span>&gt;</span>销售<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;repoManager&quot;</span>&gt;</span>库管<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;planner&quot;</span>&gt;</span>策划<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>基本资料<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>设置<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">shiro:user</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--游客--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line">                请<span class="tag">&lt;<span class="name">label</span> <span class="attr">style</span>=<span class="string">&quot;color: white;text-decoration: underline&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;javascript:location.href=&#x27;login.html&#x27;&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-side layui-bg-black&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-side-scroll&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 左侧导航区域（可配合layui已有的垂直导航） --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav layui-nav-tree&quot;</span> <span class="attr">lay-filter</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item layui-nav-itemed&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>仓库管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>入库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>出库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>修改库存<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>查询库存<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>客服管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customer:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>新增客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customer:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customer:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>修改客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customer:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>查询客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:order:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>新增订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:order:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:order:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>修改订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:order:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>查询订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 内容主体区域 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding: 15px;&quot;</span>&gt;</span>内容主体区域。记得修改 layui.css 和 js 的路径<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-footer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 底部固定区域 --&gt;</span></span><br><span class="line">        底部固定区域</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;layui/layui.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入 layui.js --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;script src=&quot;//unpkg.com/layui@2.6.8/dist/layui.js&quot;&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//JavaScript代码区域</span></span></span><br><span class="line"><span class="javascript">    layui.use(<span class="string">&#x27;element&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> element = layui.element;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8-自定义Realm的配置</title>
      <link href="/2021/09/09/8-%E8%87%AA%E5%AE%9A%E4%B9%89Realm%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/09/09/8-%E8%87%AA%E5%AE%9A%E4%B9%89Realm%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="改变Realm来源"><a href="#改变Realm来源" class="headerlink" title="改变Realm来源"></a>改变Realm来源</h4><p>​    在ShiroConfig类中之前是连接JdbcRealm，JdbcRealm自动封装了认证和授权的SQL，而自定义realm到自己写，并且安全数据源要换成myRealm。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> MyRealm <span class="title">getMyRealm</span><span class="params">()</span></span>&#123;</span><br><span class="line">    MyRealm myRealm = <span class="keyword">new</span> MyRealm();</span><br><span class="line">    <span class="keyword">return</span> myRealm;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(MyRealm myRealm)</span> </span>&#123;</span><br><span class="line">    DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">    defaultWebSecurityManager.setRealm(myRealm);</span><br><span class="line">    <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置MyRealm"><a href="#配置MyRealm" class="headerlink" title="配置MyRealm"></a>配置MyRealm</h4><p>​    myRealm主要负责登录和授权，并把查询结果返回给SecurityManager安全管理器。并表示MyRealm类的真实名字。MyRealm类继承AuthorizingRealm类shiro从才认识自定义的realm。并把认证和授权的信息封装成Realm规定的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RoleDao roleDao;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PermissionDao permissionDao;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;myRealm&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *  授权功能：获取用户的角色和权限信息</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">        String username = (String) principalCollection.iterator().next();</span><br><span class="line">        Set&lt;String&gt; roleNames = roleDao.queryRolenameByUsername(username);</span><br><span class="line">        Set&lt;String&gt; permissionCode = permissionDao.queryPermissionCodeByUsername(username);</span><br><span class="line">        SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">        info.setRoles(roleNames);</span><br><span class="line">        info.setStringPermissions(permissionCode);</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 认证方法从自定义realm中获取安全数据</span></span><br><span class="line"><span class="comment">     * 因为jdbcRealm会自动认证，只需要subject.login(token)</span></span><br><span class="line"><span class="comment">     * 而自定义realm要查安全数据</span></span><br><span class="line"><span class="comment">     * 并把结果包装成AuthenticationInfo对象</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;</span><br><span class="line">        String username = token.getUsername();</span><br><span class="line">        Users users = userDao.queryUserByUsername(username);</span><br><span class="line">        <span class="comment">// 用户名，密码，realm名</span></span><br><span class="line">        AuthenticationInfo info = <span class="keyword">new</span> SimpleAuthenticationInfo(username,users.getPwd(),getName());</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7-自定义Realm的DAO操作</title>
      <link href="/2021/09/08/7-%E8%87%AA%E5%AE%9A%E4%B9%89Realm%E7%9A%84DAO%E6%93%8D%E4%BD%9C/"/>
      <url>/2021/09/08/7-%E8%87%AA%E5%AE%9A%E4%B9%89Realm%E7%9A%84DAO%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h4 id="dao流程的分析"><a href="#dao流程的分析" class="headerlink" title="dao流程的分析"></a>dao流程的分析</h4><p>​    由于这次自定义myRealm,而shiro自带JdbcRealm帮我们封装好了，负责认证和授权过程sql查询。所以自定义myRealm也要写这些SQL语句。如下</p><table><thead><tr><th>myRealm也要完成认证和授权的SQL</th></tr></thead><tbody><tr><td>1。 认证（登录时）验证查询</td></tr><tr><td>根据username查询用户信息。简单的单表查询</td></tr><tr><td>2。授权查询</td></tr><tr><td>根据用户名查询该用户的角色信息</td></tr><tr><td>根据用户名查询该用户的权限信息</td></tr><tr><td><img src="https://z3.ax1x.com/2021/09/08/hbm66x.png" alt="avatar"></td></tr></tbody></table><h4 id="我的SQL"><a href="#我的SQL" class="headerlink" title="我的SQL"></a>我的SQL</h4><h5 id="认证SQL"><a href="#认证SQL" class="headerlink" title="认证SQL"></a>认证SQL</h5><p>​    单表查询根据username查询用户信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> u.id <span class="keyword">from</span> users u <span class="keyword">where</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><h5 id="授权SQL"><a href="#授权SQL" class="headerlink" title="授权SQL"></a>授权SQL</h5><p>​      根据用户名查询该用户的角色信息，①先查用户角色表中该用户的角色编号。②再根据role_id联合查询用户表、角色表，并且2个表的角色id一样。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">第一步 </span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">ur.rid <span class="keyword">FROM</span> users_roles ur </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">ur.uid <span class="operator">=</span> (<span class="keyword">SELECT</span>u.id <span class="keyword">FROM</span> users u WHEREu.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>)</span><br><span class="line"></span><br><span class="line">第二步  </span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">u.username,r.role_name <span class="keyword">FROM</span> roles r, users u </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">r.role_id <span class="keyword">IN</span> (</span><br><span class="line"><span class="keyword">SELECT</span> ur.rid <span class="keyword">FROM</span>users_roles ur </span><br><span class="line">        <span class="keyword">WHERE</span></span><br><span class="line">ur.uid <span class="operator">=</span> ( <span class="keyword">SELECT</span> u.id <span class="keyword">FROM</span> users u <span class="keyword">WHERE</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span> )) <span class="keyword">AND</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><p>​    根据用户名查询权限信息。①先查用户角色表中该用户的角色编号，②再根据rid关联角色权限表、权限表、用户表，并且角色权限表中的rid和①的rid一样，角色权限表中的pid和权限表permission_id一样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">第一步 </span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">ur.rid <span class="keyword">FROM</span> users_roles ur </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">ur.uid <span class="operator">=</span> (<span class="keyword">SELECT</span>u.id <span class="keyword">FROM</span> users u WHEREu.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>)</span><br><span class="line">第二步</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span></span><br><span class="line">rp.pid, p.permission_code, p.permission_name, u.username </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">roles_permissions rp, permissions p, users u </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">rp.rid <span class="keyword">IN</span> (</span><br><span class="line"><span class="keyword">SELECT</span> ur.rid <span class="keyword">FROM</span> users_roles ur <span class="keyword">WHERE</span></span><br><span class="line">ur.uid <span class="operator">=</span> ( <span class="keyword">SELECT</span> u.id <span class="keyword">FROM</span> users u <span class="keyword">WHERE</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span> )) <span class="keyword">AND</span> p.permission_id <span class="operator">=</span> rp.pid <span class="keyword">AND</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="改进的SQL"><a href="#改进的SQL" class="headerlink" title="改进的SQL"></a>改进的SQL</h4><p>​    通过username查询到角色名称。使用连接查询的方法(涉及3张表，users、users_roles、roles)。SQL如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">u.username, r.role_name </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">users u</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> users_roles ur <span class="keyword">ON</span> u.id <span class="operator">=</span> ur.uid</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> roles r <span class="keyword">ON</span> r.role_id <span class="operator">=</span> ur.rid </span><br><span class="line"><span class="keyword">WHERE</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><p>​    通过username查询权限信息，关联5张表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> u.username, p.permission_code </span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">users u <span class="keyword">inner</span> <span class="keyword">join</span> users_roles ur <span class="keyword">on</span> u.id<span class="operator">=</span>ur.uid </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> roles r <span class="keyword">on</span> r.role_id<span class="operator">=</span>ur.rid</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> roles_permissions rp <span class="keyword">on</span> rp.rid<span class="operator">=</span>r.role_id</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> permissions p <span class="keyword">on</span> p.permission_id<span class="operator">=</span>rp.pid</span><br><span class="line"><span class="keyword">where</span> u.username<span class="operator">=</span><span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="Dao流程"><a href="#Dao流程" class="headerlink" title="Dao流程"></a>Dao流程</h4><p>​    以查询权限为例，先创建PermissionDao和对应的Mapper.xml。因为application.yml中设置mappers和生成beans的路径。所以PermissionMapper.xml必须在resource的mappers包下，而实体类必须在beans包下</p><p><img src="https://z3.ax1x.com/2021/09/09/hq7Ndg.png" alt="avatar"></p><p>​    并在启动配置类中SpringbootAndShiroApplication类中配置mapper扫描注解。指定dao的SQL语句，而不用在每个dao接口上写@Mapper，所以的SpringbootAndShiroApplication类的上方加上@MapperScan(basePackages = “com.example.springbootandshiro.dao”)。有我们只需要权限代码不需要权限的其它信息，所以PermissionMapper.xml的返回值是Set<String>类型。string—&gt;”sys:order:add“等等</p><h5 id="PermissionDao"><a href="#PermissionDao" class="headerlink" title="PermissionDao"></a>PermissionDao</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PermissionDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">queryPermissionCodeByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="PermissionMapper"><a href="#PermissionMapper" class="headerlink" title="PermissionMapper"></a>PermissionMapper</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.springbootandshiro.dao.PermissionDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryPermissionCodeByUsername&quot;</span> <span class="attr">resultSets</span>=<span class="string">&quot;java.util.Set&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;string&quot;</span>&gt;</span></span><br><span class="line">        select p.permission_code</span><br><span class="line">        from</span><br><span class="line">            users u inner join users_roles ur on u.id=ur.uid</span><br><span class="line">                    inner join roles r on r.role_id=ur.rid</span><br><span class="line">                    inner join roles_permissions rp on rp.rid=r.role_id</span><br><span class="line">                    inner join permissions p on p.permission_id=rp.pid</span><br><span class="line">        where u.username=#&#123;username&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="PermissionDaoTest"><a href="#PermissionDaoTest" class="headerlink" title="PermissionDaoTest"></a>PermissionDaoTest</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes = SpringBootAndShiroApplication.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PermissionDao permissionDao;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryRolenameByUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Set&lt;String&gt; permissionCodes = permissionDao.queryPermissionCodeByUsername(<span class="string">&quot;zhoudu&quot;</span>);</span><br><span class="line">        Iterator&lt;String&gt; it = permissionCodes.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext()) &#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="项目结构与测试结果"><a href="#项目结构与测试结果" class="headerlink" title="项目结构与测试结果"></a>项目结构与测试结果</h5><table><thead><tr><th><img src="https://z3.ax1x.com/2021/09/09/hqLfHK.png" alt="avatar"></th></tr></thead><tbody><tr><td><img src="https://z3.ax1x.com/2021/09/09/hqOnC4.png" alt="avatar"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6-自定义Realm的数据表设计</title>
      <link href="/2021/09/08/6-%E8%87%AA%E5%AE%9A%E4%B9%89Realm%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E8%AE%BE%E8%AE%A1/"/>
      <url>/2021/09/08/6-%E8%87%AA%E5%AE%9A%E4%B9%89Realm%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><p>​    根据RBAC权限设计，至少需要5张表。</p><table><thead><tr><th>解释</th><th>表名</th><th>描述</th></tr></thead><tbody><tr><td>用户表</td><td>users</td><td>自增id,账号，密码，加盐密码</td></tr><tr><td>角色表</td><td>roles</td><td>自增role_id,角色名称</td></tr><tr><td>权限表</td><td>permissions</td><td>自增permission_id,权限代码，权限名称</td></tr><tr><td>用户角色表</td><td>users_roles</td><td>用户id，角色id，</td></tr><tr><td>角色权限表</td><td>roles_permissions</td><td>角色id，权限id</td></tr></tbody></table><h5 id="用户表"><a href="#用户表" class="headerlink" title="用户表"></a>用户表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> users(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">PRIMARY</span> key auto_increment,</span><br><span class="line">username <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">password <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">password_salt <span class="type">varchar</span>(<span class="number">60</span>)</span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;zhoudu&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;wangtaiwen&#x27;</span>,<span class="string">&#x27;321654&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;tangyifu&#x27;</span>,<span class="string">&#x27;741852&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;yangtian&#x27;</span>,<span class="string">&#x27;963852&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;caiyonghu&#x27;</span>,<span class="string">&#x27;789456&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="角色表"><a href="#角色表" class="headerlink" title="角色表"></a>角色表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> roles(</span><br><span class="line">role_id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">role_name <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;admin&#x27;</span>);  <span class="comment">-- 超级管理员</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;HR&#x27;</span>);     <span class="comment">-- 人事 </span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>); <span class="comment">-- 销售</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>); <span class="comment">-- 库管</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;planner&#x27;</span>); <span class="comment">-- 策划</span></span><br></pre></td></tr></table></figure><h5 id="权限表"><a href="#权限表" class="headerlink" title="权限表"></a>权限表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> permissions(</span><br><span class="line">permission_id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment, <span class="comment">-- 1</span></span><br><span class="line">permission_code <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span>,         <span class="comment">-- sys:repo:find</span></span><br><span class="line">permission_name <span class="type">varchar</span>(<span class="number">60</span>) <span class="comment">-- 库存查询</span></span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:repo:save&#x27;</span>,<span class="string">&#x27;添加库存&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:repo:delete&#x27;</span>,<span class="string">&#x27;减少库存&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:repo:update&#x27;</span>,<span class="string">&#x27;修改库存&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:repo:find&#x27;</span>,<span class="string">&#x27;查询库存&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:order:save&#x27;</span>,<span class="string">&#x27;添加订单&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:order:delete&#x27;</span>,<span class="string">&#x27;减少订单&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:order:update&#x27;</span>,<span class="string">&#x27;修改订单&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:order:find&#x27;</span>,<span class="string">&#x27;查询订单&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:customer:save&#x27;</span>,<span class="string">&#x27;添加客户&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:customer:delete&#x27;</span>,<span class="string">&#x27;减少客户&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:customer:update&#x27;</span>,<span class="string">&#x27;修改客户&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:customer:find&#x27;</span>,<span class="string">&#x27;查询客户&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="用户角色表"><a href="#用户角色表" class="headerlink" title="用户角色表"></a>用户角色表</h5><p>​    为某个用户分配某个角色，一个用户可以对用多个角色，一个角色也可由对应多个用户。拥有某个角色就等于拥有这个角色的所有信息，比如id=1，username=zhoudu是超级管理员，就给zhoudu分配所有角色，有HR、seller、repoManager、planner。除了id=1，其它id要和角色表role_id对应。比如id=2的wangtaiwen对应人事HR，id=3的tangyifu对应销售。等等</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> users_roles(</span><br><span class="line">uid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">rid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="comment">-- primary key(uid,rid),</span></span><br><span class="line"><span class="comment">-- constraint FK_user foreign key(uid) references users(id);</span></span><br><span class="line"><span class="comment">-- constraint FK_roles foreign key(rid) references roles(role_id);</span></span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h5 id="角色权限表"><a href="#角色权限表" class="headerlink" title="角色权限表"></a>角色权限表</h5><p>​    为某个角色分配一些权限，一些功能。某个角色可以有多个权限也可以有一个权限。先规定库管有库存的增删改查；销售人员有订单的增删改查和客户的增删改查和添加库存功能。人事HR有修改客户和查询客户。为从策划planner分配存库、订单、客户的查询。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> roles_permissions(</span><br><span class="line">rid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">pid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> roles_permissions;</span><br><span class="line"><span class="comment">-- 为库管rid=4 设置权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line"><span class="comment">-- 为销售rid=3 设置权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">7</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">8</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">9</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">11</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">12</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="comment">-- 为HR rid=2 设置权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">2</span>,<span class="number">11</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">2</span>,<span class="number">12</span>);</span><br><span class="line"><span class="comment">-- 为策划 rid=5 设置权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">8</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">12</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5-Shiro标签导入</title>
      <link href="/2021/09/07/5-Shiro%E6%A0%87%E7%AD%BE%E5%AF%BC%E5%85%A5/"/>
      <url>/2021/09/07/5-Shiro%E6%A0%87%E7%AD%BE%E5%AF%BC%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h4 id="导入方式"><a href="#导入方式" class="headerlink" title="导入方式"></a>导入方式</h4><p>​    在认证成功进入index页面后，需要看到用户信息，和相关的权限信息。Shiro就提供一套类似jstl的标签使用。shiro标签可以在jsp中也可以在ThemeLeaf中使用。导入后就能使用shiro的标签库。</p><table><thead><tr><th>引入方式</th></tr></thead><tbody><tr><td>1。 jsp中===&gt;   &lt;%@ taglib prefix=”shiro”  uri=”hhtp://shiro.apache.org/tags” %&gt;</td></tr><tr><td>2。 ThemeLeaf中===&gt;  <br /><html xmlns:th="http://www.thymeleaf.org"     xmlns:shiro="http://pollix.at/themeleaf/shiro"></td></tr><tr><td></td></tr></tbody></table><h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><p>​    要引入shiro对ThemeLeaf模板标签的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.theborakompanioni<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-shiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>设置ShiroConfig类中shiro自定义tags</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注册这个bean目的就是为了在thymeleaf中使用shiro的自定义tag。</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ShiroDialect <span class="title">shiroDialect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ShiroDialect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="shiro的常用标签"><a href="#shiro的常用标签" class="headerlink" title="shiro的常用标签"></a>shiro的常用标签</h4><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><a href="shiro:guest">shiro:guest</a></td><td>游客身份访问页面展示的内容</td></tr><tr><td><a href="shiro:user">shiro:user</a></td><td>登录后用户在页面上看到的内容</td></tr><tr><td><a href="shiro:principal">shiro:principal</a></td><td>显示用户名</td></tr><tr><td><a href="shiro:hasRole">shiro:hasRole</a></td><td>判断用户是否有某个角色</td></tr></tbody></table><h4 id="登录成功后index页面"><a href="#登录成功后index页面" class="headerlink" title="登录成功后index页面"></a>登录成功后index页面</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:shiro</span>=<span class="string">&quot;http://pollix.at/themeleaf/shiro&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    index登录成功后/////////</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line">        游客访问状态，<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/login.html&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">shiro:user</span>&gt;</span></span><br><span class="line">        用户<span class="tag">&lt;<span class="name">shiro:principal</span>/&gt;</span>欢迎你</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        当前用户职位是</span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;admin&quot;</span>&gt;</span>超级管理员<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;repairman&quot;</span>&gt;</span>维修工<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;seller&quot;</span>&gt;</span>销售<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;repoManager&quot;</span>&gt;</span>库管<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;customerstaff&quot;</span>&gt;</span>客服<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        你有一下权限<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        仓库管理权限</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>入库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>出库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>修改库存<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>查询库存<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        订单管理权限</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:seller:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>增加订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:seller:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>删除订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:seller:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>修改订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:seller:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>查找订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        客服管理权限</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customerstaff:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>增加客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customerstaff:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>删除客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customerstaff:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>修改客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customerstaff:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>查找客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shiro:user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4-Shiro的JdbcRealm介绍和表结构</title>
      <link href="/2021/09/07/4-Shiro%E7%9A%84JdbcRealm%E4%BB%8B%E7%BB%8D%E5%92%8C%E8%A1%A8%E7%BB%93%E6%9E%84/"/>
      <url>/2021/09/07/4-Shiro%E7%9A%84JdbcRealm%E4%BB%8B%E7%BB%8D%E5%92%8C%E8%A1%A8%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h4 id="JdbcRealm简介"><a href="#JdbcRealm简介" class="headerlink" title="JdbcRealm简介"></a>JdbcRealm简介</h4><p>​    JdbcRealm是shiro框架内置的安全数据源，需要连接数据库才能使用。连接的数据库的表结构必须遵循某种规范。</p><h4 id="jdbcRealm表结构规范"><a href="#jdbcRealm表结构规范" class="headerlink" title="jdbcRealm表结构规范"></a>jdbcRealm表结构规范</h4><p>​    至少包含三张表，并且表名和字段名都是固定的。如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> users (</span><br><span class="line">  id <span class="type">bigint</span> auto_increment,</span><br><span class="line">  username <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  password <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  password_salt <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  <span class="keyword">constraint</span> pk_users <span class="keyword">primary</span> key(id)</span><br><span class="line">) charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index idx_users_username <span class="keyword">on</span> users(username);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user_roles(</span><br><span class="line">  id <span class="type">bigint</span> auto_increment,</span><br><span class="line">  username <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  role_name <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  <span class="keyword">constraint</span> pk_user_roles <span class="keyword">primary</span> key(id)</span><br><span class="line">) charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index idx_user_roles <span class="keyword">on</span> user_roles(username, role_name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> roles_permissions(</span><br><span class="line">  id <span class="type">bigint</span> auto_increment,</span><br><span class="line">  role_name <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  permission <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  <span class="keyword">constraint</span> pk_roles_permissions <span class="keyword">primary</span> key(id)</span><br><span class="line">) charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index idx_roles_permissions <span class="keyword">on</span> roles_permissions(role_name, permission);</span><br></pre></td></tr></table></figure><h4 id="初始化表数据"><a href="#初始化表数据" class="headerlink" title="初始化表数据"></a>初始化表数据</h4><h5 id="用户信息表users"><a href="#用户信息表users" class="headerlink" title="用户信息表users"></a>用户信息表users</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;wangwu&#x27;</span>,<span class="string">&#x27;55555&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;zhaoliu&#x27;</span>,<span class="string">&#x27;666666&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;chengqi&#x27;</span>,<span class="string">&#x27;77777&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="用户角色表user-roles"><a href="#用户角色表user-roles" class="headerlink" title="用户角色表user_roles"></a>用户角色表user_roles</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- admin 超级管理员；seller销售员；repoManager仓库管理员 ；customerstaff 客服；repairman 维修工</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;seller&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;wangwu&#x27;</span>,<span class="string">&#x27;repoManager&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;zhaoliu&#x27;</span>,<span class="string">&#x27;customerstaff&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;chengqi&#x27;</span>,<span class="string">&#x27;repairman&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="角色权限表roles-permissions"><a href="#角色权限表roles-permissions" class="headerlink" title="角色权限表roles_permissions"></a>角色权限表roles_permissions</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 管理员有所有权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 库管员有仓库的增删改查</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>,<span class="string">&#x27;sys:repo:save&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>,<span class="string">&#x27;sys:repo:delete&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>,<span class="string">&#x27;sys:repo:update&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>,<span class="string">&#x27;sys:repo:find&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 销售员有销售订单的增删改查和客服人员的增删改查和 仓库的查询</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:seller:save&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:seller:delete&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:seller:update&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:seller:find&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:repo:find&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:customerstaff:save&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:customerstaff:delete&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:customerstaff:update&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:customerstaff:find&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 客服有客户的查询和修改</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;customerstaff&#x27;</span>,<span class="string">&#x27;sys:customerstaff:find&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;customerstaff&#x27;</span>,<span class="string">&#x27;sys:customerstaff:update&#x27;</span>);</span><br><span class="line"><span class="comment">-- 修理工有所有的查询权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repairman&#x27;</span>,<span class="string">&#x27;sys:*:find&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-SpringBoot整合Shiro</title>
      <link href="/2021/09/04/3-SpringBoot%E6%95%B4%E5%90%88Shiro/"/>
      <url>/2021/09/04/3-SpringBoot%E6%95%B4%E5%90%88Shiro/</url>
      
        <content type="html"><![CDATA[<h4 id="shiro的应用场景"><a href="#shiro的应用场景" class="headerlink" title="shiro的应用场景"></a>shiro的应用场景</h4><p>​    可以在javaSE应用的中的使用；也可以在web应用中的使用；SSM整合（配置多，用的少）。springboot主流</p><h4 id="创建SpringBoot项目的过程"><a href="#创建SpringBoot项目的过程" class="headerlink" title="创建SpringBoot项目的过程"></a>创建SpringBoot项目的过程</h4><p>​    使用SpringInitializr快速创建springboot项目，需要集成themeleaf、springboot-web、lombok。使用druid和mybatis当做安全数据传递给realm组件，而且需要连接MySQL。导入以下依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          </span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    还需要配置springboot的启动配置文件application.yml。配置数据库连接池和mybatis的参数</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/ShiroDB?characterEncoding=utf8&amp;amp;serverTimezone=UTC</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mybaits/*Mapper.xml</span> <span class="comment">#指定全局配置文件位置</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.example.shirospringboot.beans</span></span><br></pre></td></tr></table></figure><h4 id="整合shiro"><a href="#整合shiro" class="headerlink" title="整合shiro"></a>整合shiro</h4><p><img src="https://z3.ax1x.com/2021/09/06/hfxBse.png" alt="avatar"></p><table><thead><tr><th>整合流程</th></tr></thead><tbody><tr><td>1。引入shiro依赖，shiro-spring（包含shiro-web和shiro-core）</td></tr><tr><td>2。配置shiro的过滤器，拦截认证Authentication和授权Authorization请求，若是登录login请求就不拦截</td></tr><tr><td>3。配置SecurityManager到spring中</td></tr><tr><td>4。配置SecurityManager中的安全数据Realm</td></tr><tr><td>5。realm从哪来？可以是shiro.ini或者druid或自定义等等。</td></tr></tbody></table><p>​    SpringBoot没有对shiro安全框架没有自动配置（SpringInitializr中没有shiro选项）是因为spring家族有自己的安全框架SpringSecurity。</p><h5 id="ShiroConfig配置类-用java类而不是xml"><a href="#ShiroConfig配置类-用java类而不是xml" class="headerlink" title="ShiroConfig配置类(用java类而不是xml)"></a>ShiroConfig配置类(用java类而不是xml)</h5><p>​    此类配置了shiroFilter（ShiroFilterFactoryBean），SecurityManager和IniRealm。并设置了过滤器的过滤规则</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IniRealm <span class="title">getIniRealm</span><span class="params">()</span></span>&#123;</span><br><span class="line">        IniRealm iniRealm = <span class="keyword">new</span> IniRealm(<span class="string">&quot;classpath:shiro.ini&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> iniRealm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(IniRealm iniRealm)</span></span>&#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        <span class="comment">// SecurityManager需要安全数据</span></span><br><span class="line">        defaultWebSecurityManager.setRealm(iniRealm);</span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shiroFilter</span><span class="params">(DefaultWebSecurityManager defaultWebSecurityManager)</span></span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean filter = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        <span class="comment">// 过滤器需要连接SecurityManager</span></span><br><span class="line">        filter.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line">        <span class="comment">// 设置filter的过滤规则</span></span><br><span class="line">        Map&lt;String,String&gt; filterMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        filterMap.put(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/login.html&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/register.html&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/user/register&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/static/**&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/**&quot;</span>,<span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        filter.setFilterChainDefinitionMap(filterMap);</span><br><span class="line">        filter.setLoginUrl(<span class="string">&quot;/login.html&quot;</span>);</span><br><span class="line">        filter.setUnauthorizedUrl(<span class="string">&quot;/login/html&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> filter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="shiro的安全数据源"><a href="#shiro的安全数据源" class="headerlink" title="shiro的安全数据源"></a>shiro的安全数据源</h5><p>​    来自shiro.ini文件，配置在resource目录下，规定了用户的账号、密码、角色等等。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="attr">zhangsan</span>=<span class="number">123456</span>,seller</span><br><span class="line"><span class="attr">laowang</span>=<span class="number">654123</span>,stockManager</span><br><span class="line"><span class="attr">admin</span>=<span class="number">147258</span>,admin</span><br><span class="line"><span class="section">[roles]</span></span><br><span class="line"><span class="attr">admin</span>=*</span><br><span class="line"><span class="attr">seller</span>=order-add,order-del,order-list</span><br><span class="line"><span class="attr">stockManager</span>=stock-add,stock-del,stock-list</span><br></pre></td></tr></table></figure><h5 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h5><p>​    先配置入口请求，在PageController中，访问localhost:8080进入登录页面login.html。填写form表单中账号，密码后发送“/user/login”请求。在UserController中接收到此请求，调用userService认证是否登录成功。若成功跳转index.html页面，否则跳转login.html页面。(index和login页面都在templates目录下)。userService的认证流程是把username和pwd存入subject（就是UsernamPasswordToekn），再subject.login()认证，若失败则抛出异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkLogin</span><span class="params">(String username, String pwd)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(username, pwd);</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        subject.login(token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login.html&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index.html&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserServiceImpl userService;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">loginToIndex</span><span class="params">(String username, String pwd)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            userService.checkLogin(username, pwd);</span><br><span class="line">            System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;shibai&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">registerToIndex</span><span class="params">(String username1, String pwd1)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            userService.checkLogin(username1, pwd1);</span><br><span class="line">            System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;shibai&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    login</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/user/login&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>账号<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    index登陆成功后</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2-Shiro安全框架简介</title>
      <link href="/2021/09/04/2-Shiro%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/"/>
      <url>/2021/09/04/2-Shiro%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h4 id="认证授权流程"><a href="#认证授权流程" class="headerlink" title="认证授权流程"></a>认证授权流程</h4><p>​    认证：对用户信息身份检查（登录认证）</p><p>​    授权：对用户权限检查（是否有对应的操作权限）</p><p>​    流程图如下：</p><p><img src="https://z3.ax1x.com/2021/09/04/hgm81I.png" alt="avatar"></p><h4 id="安全框架"><a href="#安全框架" class="headerlink" title="安全框架"></a>安全框架</h4><p>​    安全框架相当于保安，对应请求完成认证（有没资格登录）和授权（有没有资格获取对应的权限）的工作。</p><h5 id="常用的安全框架有"><a href="#常用的安全框架有" class="headerlink" title="常用的安全框架有"></a>常用的安全框架有</h5><table><thead><tr><th>shiro：</th><th>Apache组织的一种开源java安全框架（小而简单）</th></tr></thead><tbody><tr><td>SpringSecurity</td><td>对spring有依赖性</td></tr><tr><td>OAuth2：</td><td>第三方授权登录框架（比如王者荣耀可以用微信、QQ账号、微博等等账号登录）</td></tr></tbody></table><h4 id="Shrio简介"><a href="#Shrio简介" class="headerlink" title="Shrio简介"></a>Shrio简介</h4><p>​    可以完成用户认证、授权、密码和会话管理。可以引用任何应用系统（主要针对单体项目的权限管理）。</p><h4 id="Shiro工作原理"><a href="#Shiro工作原理" class="headerlink" title="Shiro工作原理"></a>Shiro工作原理</h4><p>​    Shiro框架主要有四大功能。</p><p><img src="https://z3.ax1x.com/2021/09/04/hguYTS.png" alt="avatar"></p><p>​    Authentication:身份认证 / 登录，验证用户是不是拥有相应的身份；</p><p>​    Authorization：授权，即权限验证，验证某个已认证的用户是否拥有某个权限或某个角色；</p><p>​    Session Management：会话管理，即用户登录后就是一次会话，在没有退出之前，它的所有信息都在会话中；会话可以是普通 JavaSE 环境的，也可以是如 Web 环境的；</p><p>​    Cryptography：对敏感信息加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储；</p><h4 id="Shiro的核心组件"><a href="#Shiro的核心组件" class="headerlink" title="Shiro的核心组件"></a>Shiro的核心组件</h4><p><img src="https://z3.ax1x.com/2021/09/04/hgws2t.png" alt="avatar"></p><ul><li><strong>Subject</strong>：主体，可以看到主体可以是任何可以与应用交互的 “用户”；subject中包含用户的账号和密码，角色权限，是否登录状态等等一切信息，shiro只接收subject。web页面from表单传递username和pwd—-&gt;controller—–&gt;service—-&gt;shiro；</li><li><strong>SecurityManager</strong>：相当于 SpringMVC 中的 DispatcherServlet 或者 Struts2 中的 FilterDispatcher；是 Shiro 的心脏；所有具体的交互都通过 SecurityManager 进行控制；它管理着所有 Subject、且负责进行认证和授权、及会话、缓存的管理。</li><li><strong>Realm</strong>：可以有 1 个或多个 Realm（dataSource），可以认为是shiro安全实体数据源，即用于获取安全实体的；是shiro和数据之间桥梁。</li><li>Shrio的工作流程</li></ul><p><img src="https://z3.ax1x.com/2021/09/04/h2SwjJ.png" alt="avatar"></p><p><img src="https://z3.ax1x.com/2021/09/04/h2svl9.png" alt="avatar"></p>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1-Shiro框架学习之权限设计</title>
      <link href="/2021/09/03/1-Shiro%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%9D%83%E9%99%90%E8%AE%BE%E8%AE%A1/"/>
      <url>/2021/09/03/1-Shiro%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%9D%83%E9%99%90%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h4 id="权限管理的场景描述"><a href="#权限管理的场景描述" class="headerlink" title="权限管理的场景描述"></a>权限管理的场景描述</h4><p>​    假如为一个服装公司设计一套有服装销售，客户信息采集，人员调动等等功能的智能管理系统。需要很多模块和功能。若此系统主要有库存管理、销售管理、客户管理、行政管理、系统管理等等功能。此表格第一行是权限分类名称和缩写代号。第二行到最后一行是权限名称和编号。</p><table><thead><tr><th>库存管理c</th><th>销售管理x</th><th>客户管理k</th><th>行政管理z</th><th>系统管理s</th></tr></thead><tbody><tr><td>入库 1001</td><td>新增订单1005</td><td>新增客户1009</td><td>卫生1013</td><td>员工管理1015</td></tr><tr><td>出库 1002</td><td>取消订单1006</td><td>查询客户1010</td><td>开关门1014</td><td>权限分配1016</td></tr><tr><td>查询 1003</td><td>订单查询1007</td><td>修改客户1011</td><td></td><td></td></tr><tr><td>修改 1004</td><td>修改订单1008</td><td>删除客户1012</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>​    现在有张三、李四分别是公司的销售人员和仓管人员，他们的职责如下表</p><table><thead><tr><th>姓名</th><th>职业</th><th>权限</th></tr></thead><tbody><tr><td>张三</td><td>销售</td><td>1003、1005~~~~1012</td></tr><tr><td>李四</td><td>仓管</td><td>1001~~~~1004、1005、1009</td></tr></tbody></table><p>​    此时ta们要进入公司的一体化管理系统，由于ta们职位不同，所以看到的菜单也不一样。这个系统登录需要账号密码，怎么通过账号来判断该员工是什么职位呢？创建一个用户表存储员工的信息并加上职位id。</p><table><thead><tr><th align="left">staff_id</th><th>staff_name</th><th>staff_password</th><th>position</th></tr></thead><tbody><tr><td align="left">1</td><td>zhangsan</td><td>123456</td><td>1(销售)</td></tr><tr><td align="left">2</td><td>lisi</td><td>444444</td><td>2（仓管）</td></tr></tbody></table><p>​    每次新来一个员工就在上方表格里增加一行数据。每个员工登录时系统会判断ta的职位position，登录后就可以看到不同菜单和按钮。</p><h5 id="基于主页的权限管理系统"><a href="#基于主页的权限管理系统" class="headerlink" title="基于主页的权限管理系统"></a>基于主页的权限管理系统</h5><p>​    这种是基于主页的权限管理系统（不同的用户看到不同的主页），但是这种权限管理不方便想要动态增加某个员工新功能，如果职位position很多就要写很多html页面。如下图所示。</p><p><img src="https://z3.ax1x.com/2021/09/04/hcIMiq.png" alt="avatar"></p><h5 id="基于用户和权限的权限管理"><a href="#基于用户和权限的权限管理" class="headerlink" title="基于用户和权限的权限管理"></a>基于用户和权限的权限管理</h5><p>​    由于基于主页的访问方式不灵活，有局限性。所以可以让功能分配的更细一些。有员工表、权限表、员工权限中间表。这种方式基本能实现权限管理。如下图所示。</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="https://z3.ax1x.com/2021/09/04/hc7qTH.png" alt="avatar"></td></tr></tbody></table><p>​    这种方式很方便新增用户，比如新增一个user-id=3，叫王五的hr。他属于行政管理。只需要在权限表中添加</p><table><thead><tr><th>权限id</th><th>权限代号 mark</th><th>描述description</th></tr></thead><tbody><tr><td>1015</td><td>sys:z:cleanUp</td><td>做卫生</td></tr><tr><td>1016</td><td>sys:z:door</td><td>开关门</td></tr></tbody></table><p>​    然后在用户权限表中添加3–&gt;1015；3–&gt;1016。若叫liucheng的用户要增加开关门的权限就可以再用户权限表中添加1—&gt;1014。若有个叫tangsan的销售新人加入公司user_id=4。则要在用户权限表里添加4—&gt;1003,4—&gt;1005~~~~1012。又要增加一些重复的数据。如果公司有100个销售人员那种用户权限表中的重复数据越来越多。其中权限id不变，变化的是user_id。</p><h5 id="RBAC-Role-Base-Access-Control-基于角色的权限控制"><a href="#RBAC-Role-Base-Access-Control-基于角色的权限控制" class="headerlink" title="RBAC(Role Base Access Control):基于角色的权限控制"></a><strong>RBAC</strong>(Role Base Access Control):基于角色的权限控制</h5><p>​    上面的建表方式可行但是不灵活。需要在用户表和权限表中增加一个角色表（职位表）。这样就有3个单独的表。再加上用户-角色表；角色-权限表这2个中间表串联起来。就可以灵活的为某个用户设置某个职位，为某个职位设计某个权限。如图</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="https://z3.ax1x.com/2021/09/04/hcXwY4.png" alt="avatar"></td></tr></tbody></table><p>​    此时公司新入职laowang相当仓管人员，只需要在用户角色表中添加 8—&gt;r002</p>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/30/hello-world/"/>
      <url>/2021/08/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《革命者》观后感</title>
      <link href="/2021/08/15/%E3%80%8A%E9%9D%A9%E5%91%BD%E8%80%85%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/"/>
      <url>/2021/08/15/%E3%80%8A%E9%9D%A9%E5%91%BD%E8%80%85%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<h4 id="故事背景"><a href="#故事背景" class="headerlink" title="故事背景"></a>故事背景</h4><p>炬华科技好看</p>]]></content>
      
      
      <categories>
          
          <category> 感后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>找到所有数组中消失的数字</title>
      <link href="/2021/08/14/%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97/"/>
      <url>/2021/08/14/%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>​    题目url：<a href="https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/">https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/</a></p><p>​    给你一个含 n 个整数的数组 nums ，其中 nums[i] 在区间 [1, n] 内。请你找出所有在 [1, n] 范围内但没有出现在 nums 中的数字，并以数组的形式返回结果。</p><p>示例 1：</p><p>输入：nums = [4,3,2,7,8,2,3,1]    输出：[5,6] 。</p><p>解释：数组nums的长度是8，正常情况nums中的元素是1~8,而nums中缺少了5,6两个数。</p><p>示例 2：</p><p>输入：nums = [1,1]   输出：[2]</p><p>解释：nums数组只有两个2，正常范围是1~2，缺少2</p><hr><h4 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h4><p>​    创建一个新数组newArr,其长度和就数组nums一样。从旧数组第一个元素开始取出元素值numVal=nums[i]（i从0开始）。再把新数组newArr重点第numVal个的元素值赋值为1。一轮循环后新数组的第j个元素是0，就代表这个j是旧数组中缺少的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">             旧数组 nums = [4,3,2,7,8,2,3,1]   新数组 newArr = [0,0,0,0,0,0,0,0]</span><br><span class="line">for循环nums中第一个元素  nums[0] = 4 </span><br><span class="line">把newArr中第4个元素赋值为1    -----&gt;    newArr = [0,0,0,1,0,0,0,0]</span><br><span class="line"></span><br><span class="line">for循环nums中第二个元素  nums[1] = 3 </span><br><span class="line">把newArr中第3个元素赋值为1    -----&gt;    newArr = [0,0,1,1,0,0,0,0]</span><br><span class="line"></span><br><span class="line">for循环nums中第三个元素  nums[2] = 2 </span><br><span class="line">把newArr中第2个元素赋值为1    -----&gt;    newArr = [0,1,1,1,0,0,0,0]</span><br><span class="line"></span><br><span class="line">for循环nums中第四个元素  nums[3] = 7 </span><br><span class="line">把newArr中第7个元素赋值为1    -----&gt;    newArr = [0,1,1,1,0,0,1,0]</span><br><span class="line"></span><br><span class="line">for循环nums中第五个元素  nums[4] = 8 </span><br><span class="line">把newArr中第8个元素赋值为1   把newArr中第2个元素赋值为1</span><br><span class="line"></span><br><span class="line">for循环nums中第六个元素  nums[5] = 2 </span><br><span class="line">把newArr中第2个元素赋值为1，此时newArr的第二个已经赋值，2是nums中重复的元素，newArr不变</span><br><span class="line">   -----&gt;    newArr = [0,1,1,1,0,0,1,1]</span><br><span class="line">   </span><br><span class="line">for循环nums中第七个元素  nums[6] = 3   </span><br><span class="line">把newArr中第3个元素赋值为1，此时newArr的第三个已经赋值，2是nums中重复的元素，newArr不变   -----&gt;    newArr = [0,1,1,1,0,0,1,1]</span><br><span class="line"></span><br><span class="line">for循环nums中第八个元素  nums[7] = 1</span><br><span class="line">把newArr中第1个元素赋值为1     -----&gt;    newArr = [1,1,1,1,0,0,1,1]</span><br><span class="line">循环结束后，newArr中第x个位置上元素是0，则x就是旧数组nums中缺失的元素。是第5个和第6个缺失</span><br></pre></td></tr></table></figure><hr><h4 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt;  <span class="title">findDisappearedNumber1</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123; </span><br><span class="line">ArrayList&lt;Integer&gt; listResult= <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">       <span class="keyword">int</span>[] newArr = <span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">           newArr[nums[i] -<span class="number">1</span>] = <span class="number">1</span>; <span class="comment">//newArr中第nums[i]个元素对应的下标是nums[i]-1</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> j =<span class="number">0</span>; j &lt; newArr.length; j++) &#123;</span><br><span class="line">           <span class="keyword">if</span>(newArr[j] == <span class="number">0</span>) &#123;</span><br><span class="line">               listResult.add(j+<span class="number">1</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> listResult;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h4><p>​    思路是从0开始遍历数组nums，下标i的范围是[0，nums.length-1]。找出nums[i]在 在区间 【1，n】 内对应下标。比如nums[i]=4—&gt;4对应的下标是3.让3号下标的元素变成负数。代表nums[i]出现过一次。for循环结束nums中哪个位置x元素&gt;0,说明x+1是缺失的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 原数组    [<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line">* 理想数组   [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]     </span><br><span class="line">* 找出nums[i]在理想数组中的下标index</span><br><span class="line">* 再原数组下标是index的元素变成负数    </span><br><span class="line">* 那么元素和其小标有关系   nums[i]=i+<span class="number">1</span></span><br><span class="line">*  元素        对应的索引                                 新数组</span><br><span class="line">*    <span class="number">4</span>       <span class="number">3</span>: 把<span class="number">3</span>号索引的元素改成负数(<span class="number">7</span>---&gt;-<span class="number">7</span>)     &#123;<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">3</span>       <span class="number">2</span>: 把<span class="number">2</span>号索引的元素改成负数(<span class="number">2</span>---&gt;-<span class="number">2</span>)     &#123;<span class="number">4</span>,<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">2</span>       <span class="number">1</span>: 把<span class="number">1</span>号索引的元素改成负数(<span class="number">3</span>---&gt;-<span class="number">3</span>)     &#123;<span class="number">4</span>,-<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">7</span>       <span class="number">6</span>: 把<span class="number">6</span>号索引的元素改成负数(<span class="number">3</span>---&gt;-<span class="number">3</span>)     &#123;<span class="number">4</span>,-<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,-<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">8</span>       <span class="number">7</span>: 把<span class="number">7</span>号索引的元素改成负数(<span class="number">1</span>---&gt;-<span class="number">1</span>)     &#123;<span class="number">4</span>,-<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,-<span class="number">3</span>,-<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">2</span>       <span class="number">1</span>: 此时 nums[<span class="number">1</span>]=-<span class="number">3</span>; 又因为num取了绝对值，又变成+<span class="number">3</span>，在变成-<span class="number">3</span></span><br><span class="line">*    <span class="number">3</span>       <span class="number">2</span>: 已经改过</span><br><span class="line">*    <span class="number">1</span>       <span class="number">0</span>: 把<span class="number">0</span>号索引的值改为负数(<span class="number">4</span>---&gt;-<span class="number">4</span>)       &#123;-<span class="number">4</span>,-<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,-<span class="number">3</span>,-<span class="number">1</span>&#125;</span><br><span class="line">*    此时没有变成负数的索引是<span class="number">4</span>、<span class="number">5</span>，对应的值是<span class="number">5</span>，<span class="number">6</span>。</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title">findDisappearedNumber2</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; missList=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> num=Math.abs(nums[i]);</span><br><span class="line">            <span class="keyword">int</span> index=num-<span class="number">1</span>; <span class="comment">//元素对应的索引  4---&gt;3</span></span><br><span class="line">            <span class="keyword">if</span>(nums[index]&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                nums[index] = -nums[index];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                missList.add(i+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> missList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考答案图解"><a href="#参考答案图解" class="headerlink" title="参考答案图解"></a>参考答案图解</h4><p><img src="https://s3.bmp.ovh/imgs/2021/08/27f967e5b44249bc.png" alt="avatar"></p><p><img src="https://s3.bmp.ovh/imgs/2021/08/e5a3ed298be5de37.png" alt="avatar"></p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://s3.bmp.ovh/imgs/2021/08/7abb04523ef7e1da.png" alt="avatar"></h2><h4 id="对比总结"><a href="#对比总结" class="headerlink" title="对比总结"></a>对比总结</h4><p>​    我的想法是用一个新的数组newArr【newArr的长度与旧数组相同】，在newArr中记录原数组的某个元素是否出现过，若出现让newArr对应下标的元素变成1.【比如 4在newArr中对应下标是3，就让newArr[3] =1 】。和参考代码相比我多创建了一个数组，多占用了一些栈内存。而参考答案只用了最原始的数组nums[],在nums[]中标记为负数。理想的数组ideaNums是不存在的【ideaNums的特点是从1到n的递增数列，每次+1】就可以用一个变量表示，节省了栈空间但是增加了逻辑复杂度。</p>]]></content>
      
      
      <categories>
          
          <category> 算法与数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内功心法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最长公共前缀</title>
      <link href="/2021/08/07/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/"/>
      <url>/2021/08/07/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</url>
      
        <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>编写一个函数来查找字符串数组中的最长公共前缀。如果不存在公共前缀，返回空字符串 “”。</p><p>示例 1：输入：strs = [“flower”,”flow”,”flight”]<br>输出：”fl”</p><p>示例 2：输入：strs = [“dog”,”racecar”,”car”]<br>输出：””<br>解释：输入不存在公共前缀。</p><h4 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h4><p>​    我的思路 for循环取出每个字符串</p><p>​    找出这些字符串中长度最小的一个 minLen，取出每个字符串的首字母 比较  。比较minLen次， 难点在于我不知道strs中有多少个字符串str，即使知道了也不能一次性把每个字符串str的首字母取出来比较。比如我有hashMap存储strs字符串数组，key—&gt;是字符串str的下标strIndex，value—&gt;char[]的，方便取出每个str的首字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HashMap &lt;Integer,<span class="keyword">char</span>[]&gt; map = <span class="keyword">new</span> HashMap();</span><br><span class="line">  <span class="keyword">int</span> chhh =<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> strsLen = strs.length;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;strsLen;j++)&#123;</span><br><span class="line">    <span class="keyword">char</span>[] ch1 = map.get(j);</span><br><span class="line">          chhh = Integer.valueOf(ch1[<span class="number">0</span>]); </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>​    关键是这个chhh每次遍历一遍字符串数组strs就有strLen个，而且这么多个chhh名字相同而值不同。</p><p>​    要是能让这些chhh带上标记（标记出这chhh是属于哪个字符串strs[j]的首字母），把每个str的chhh取出来，亦或。若每个chhh异或后=0，说明这个chhh是公共值。</p><p>​    在把每个str的第二个元素取出来chhh2，异或每个chhh2若chhh2=0,说明是公共值。一直循环minLen次。chhhh[i] ^= chhhh[i+1];若循环每个str的首字母chhh后，chhh=0 说明chhh是公共前缀。代码太复杂不会写了。wuwuwu</p><h4 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">longestCommonPrefix</span><span class="params">(String[] strs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] lenthS = <span class="keyword">new</span> <span class="keyword">int</span>[strs.length];</span><br><span class="line">        HashMap&lt;Integer, <span class="keyword">char</span>[]&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span> ; i&lt;strs.length; i++) &#123;</span><br><span class="line">            String s1 = strs[i];</span><br><span class="line">            map.put(i,s1.toCharArray());</span><br><span class="line">            lenthS[i]=s1.length();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> min = Integer.MAX_VALUE; <span class="comment">// min是所有字符串中长度最小的一个</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;lenthS.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(lenthS[i] &lt;min) &#123;</span><br><span class="line">                min=lenthS[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> chhh;</span><br><span class="line">        <span class="keyword">int</span> strLen = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;strs.length; j++) &#123; <span class="comment">//取出每个字符串的</span></span><br><span class="line">                <span class="keyword">char</span>[] ch1 = map.get(j);</span><br><span class="line">                chhh = Integer.valueOf(ch1[<span class="number">0</span>]); <span class="comment">//这是每个字符串的首字母</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// 然后取出每个str的首字母 chhh</span></span><br><span class="line">    <span class="comment">// 每个chhh异或，若chhh==0，chhh是公共值</span></span><br><span class="line">    <span class="comment">// 循环minLen次就能找出最长的公共前缀</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">longestCommonPrefix</span><span class="params">(String[] strs)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(strs.length == <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       String ans = strs[<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">1</span>;i&lt;strs.length;i++) &#123;</span><br><span class="line">           <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">           <span class="keyword">for</span>(;j&lt;ans.length() &amp;&amp; j &lt; strs[i].length();j++) &#123; </span><br><span class="line">               <span class="comment">// j表示每个字符串中当前元素的下标</span></span><br><span class="line">               <span class="comment">// j要小于第一个字符串长度并且小于后面一个字符串的长度</span></span><br><span class="line">               <span class="comment">// j的最大值是----&gt;当前字符串ans长度和下一个字符串strs[i]长度的较小哪个</span></span><br><span class="line">               <span class="keyword">if</span>(ans.charAt(j) != strs[i].charAt(j))&#123;</span><br><span class="line">                   <span class="comment">// 若在j位 两个字符串的对应char值不一样</span></span><br><span class="line">                   <span class="comment">// 标记出出现差异的下标，退出内层循环</span></span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           ans = ans.substring(<span class="number">0</span>, j); <span class="comment">// 截取第0个~第j个字符</span></span><br><span class="line">           <span class="keyword">if</span>(ans.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">               <span class="keyword">return</span> ans;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> ans;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="参考代码的图解如下"><a href="#参考代码的图解如下" class="headerlink" title="参考代码的图解如下"></a>参考代码的图解如下</h4><ul><li><img src="https://www.hualigs.cn/image/610fe4fc6f5d9.jpg" alt="avatar"></li></ul><h4 id="对比总结"><a href="#对比总结" class="headerlink" title="对比总结"></a>对比总结</h4><p>​    我的想法很直接，是取出strs中每个字符串的首字母，在把这些首字母异或。若异或的结果等于0，就表明这是公共元素。首先这种做法不合理。因为不能一次性把每个字符串的首字符取出来一起比较。只能两个字符串的同一个下标索引的值比较。</p><p>​    在看了参考代码后，我发现能用整体的思维比较【以每个字符串为单位,比较ans和strs[i]，用j为下标记录2个字符串间第一次有差异的位置，截取下标j之间的公共部分，让ans重新指向这个公共部分。而strs[i]也同样指向下一个字符串。这样淘汰的是整个长度较大字符串】。而不是以每个字符为单位。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发现参考答案的</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">1</span>;i&lt;strs.length;i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;ans.length() &amp;&amp; j &lt; strs[i].length();j++) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这段代码能代替我的</span></span><br><span class="line"><span class="keyword">int</span> min = Integer.MAX_VALUE; <span class="comment">// min是所有字符串中长度最小的一个</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;lenthS.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(lenthS[i] &lt;min) &#123;</span><br><span class="line">            min=lenthS[i];</span><br><span class="line">         &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> <span class="comment">//同样是标记出所有字符串中长度最小的。只不过我一次性找出来，而参考答案是多次找出来。</span></span><br><span class="line"> <span class="comment">//就是分成多次操作才好用substring()方法截取公共部分，还有空间刷新ans和strs[i] !!!</span></span><br><span class="line"> <span class="comment">//我一开始没有想到用substring()而是以一个字符为单位，找出来而然后存入string[]中</span></span><br><span class="line"> <span class="comment">//这样不仅增加每个字符对比的难度还增加了数组拆分和组装的时间</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法与数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内功心法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么搭建博客</title>
      <link href="/2021/08/07/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/08/07/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<hr><p>​    当作兴趣爱好消磨时光</p><p>​    创建个人博客感觉很酷，就像一个小型的qq空间一样的个人主页。创建博客的过程很有趣能学到很多新东西，比如对npm多了一些了解。更熟悉yml文件配置的格式规范。学习应用新的hexo博客框架并展示出来挺有成就感的。</p><p>​    还能记录自己学java的过程、感受、理解等等。自己慢慢的梳理知识点，理解原理这样映像就更深刻。</p><p>​    记录生活如看书或看电影后的读后感、锻炼写作能力还能模仿优秀博主的写作风格。                           </p><p>​    还能写在简历上添加亮点                                                                                                            </p><p>​                                     —— 一个刚入职两个月的菜鸟程序猿</p>]]></content>
      
      
      
        <tags>
            
            <tag> 初来乍到 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
